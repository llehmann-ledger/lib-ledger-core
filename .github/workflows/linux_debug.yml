  name: Linux (Debug)

  env:
    source_path: 'libcore'
    build_path: 'build'

  on:
    push:
      branches:
        - develop
    pull_request:
      branches:
        - develop

  jobs:
    debug_workflow:
      runs-on: ubuntu-20.04
      steps:
        - name: Install dependencies
          run: |
            sudo apt-get install -qqy \
            build-essential \
            git \
            lcov \
            gcovr \
            qtbase5-dev \
            libqt5websockets5-dev \
            openssl \
            libssl-dev \
            cmake \
            wget

        - name: Checkout code
          uses: actions/checkout@v2
          with:
            path: ${{env.source_path}}
            clean: true
            submodules: true

        - name: Build - Cmake
          run: |
            mkdir ${{env.build_path}}
            cd ${{env.build_path}}
            cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=YES -DBUILD_TESTS=ON ../${{env.source_path}}

        - name: Build - Make
          run: |
            make -j$(nproc)
          working-directory: ${{env.build_path}}

        - name : Upload build files
          uses: actions/upload-artifact@v2
          with:
            name: linux-build-files
            path: |
              ${{env.build_path}}/core/src/libledger-core-static.a
              ${{env.build_path}}/core/src/libledger-core.so

        - name: Run Unit Tests
          run: ctest --timeout 240 -VV
          continue-on-error: true
          working-directory: ${{env.build_path}}

        - name: Get raw coverage
          run: |
            lcov -q --directory core/src/ \
            --base-directory ../${{env.source_path}}/core/src/ \
            --no-external \
            --capture \
            -o lcov.info
          working-directory: ${{env.build_path}}

        - name: Generate coverage HTML report
          run: |
            genhtml --ignore-errors \
            source lcov.info \
            --title "Libcore: Unit Test Coverage (Linux, Debug)" \
            --frames \
            --show-details \
            --keep-descriptions \
            --output-directory=lcov_html_report
          working-directory: ${{env.build_path}}

        - name : Upload coverage report
          uses: actions/upload-artifact@v2
          with:
            name: coverage_report
            path: |
              ./lcov_html_report
            working-directory: ${{env.build_path}}

        - name: Clean workspace
          if: ${{ always() }}
          run: |
            echo "Cleaning up previous run"
            rm -rf "${{ github.workspace }}/${{env.build_path}}"